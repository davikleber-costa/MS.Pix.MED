using MS.Pix.MED.Test.Temp;

namespace MS.Pix.MED.Test.Temp;

/// <summary>
/// Classe para executar os testes de integra√ß√£o JDPI
/// Execute este arquivo para testar a integra√ß√£o
/// </summary>
public class ExecutarTesteJdpi
{
    /// <summary>
    /// M√©todo principal para executar todos os testes
    /// BREAKPOINT: Coloque aqui para iniciar o debug completo
    /// </summary>
    public static async Task Main(string[] args)
    {
        Console.WriteLine("üöÄ INICIANDO TESTES DE INTEGRA√á√ÉO MS.Pix.MED ‚Üî credisis-jdpi-core");
        Console.WriteLine("================================================================");
        
        var teste = new TesteIntegracaoJdpi();
        
        try
        {
            // BREAKPOINT 1: Verificar configura√ß√µes
            Console.WriteLine("\nüìã 1. VERIFICANDO CONFIGURA√á√ïES...");
            teste.VerificarConfiguracoes();
            
            // BREAKPOINT 2: Teste de autentica√ß√£o
            Console.WriteLine("\nüîê 2. TESTANDO AUTENTICA√á√ÉO...");
            var autenticado = await teste.TestarAutenticacaoAsync();
            
            if (autenticado)
            {
                Console.WriteLine("‚úÖ Autentica√ß√£o realizada com SUCESSO!");
                
                // BREAKPOINT 3: Teste de requisi√ß√£o completa
                Console.WriteLine("\nüì° 3. TESTANDO REQUISI√á√ÉO COMPLETA...");
                var resultado = await teste.TestarRequisicaoCompletaAsync();
                
                if (resultado != null)
                {
                    Console.WriteLine("‚úÖ Requisi√ß√£o completa realizada com SUCESSO!");
                }
                else
                {
                    Console.WriteLine("‚ùå Falha na requisi√ß√£o completa");
                }
            }
            else
            {
                Console.WriteLine("‚ùå FALHA na autentica√ß√£o - Verifique se o credisis-jdpi-core est√° rodando na porta 7189");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"üí• ERRO GERAL: {ex.Message}");
            Console.WriteLine($"Stack Trace: {ex.StackTrace}");
        }
        
        Console.WriteLine("\n================================================================");
        Console.WriteLine("üèÅ TESTES FINALIZADOS");
        Console.WriteLine("Pressione qualquer tecla para sair...");
        Console.ReadKey();
    }
    
    /// <summary>
    /// Teste individual de autentica√ß√£o
    /// Use este m√©todo para testar apenas a autentica√ß√£o
    /// </summary>
    public static async Task TestarApenasAutenticacao()
    {
        Console.WriteLine("üîê TESTE INDIVIDUAL - APENAS AUTENTICA√á√ÉO");
        
        var teste = new TesteIntegracaoJdpi();
        
        // BREAKPOINT: Coloque aqui para debug espec√≠fico de autentica√ß√£o
        var resultado = await teste.TestarAutenticacaoAsync();
        
        Console.WriteLine(resultado ? "‚úÖ Sucesso!" : "‚ùå Falha!");
    }
}